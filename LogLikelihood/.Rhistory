https://r4ds.had.co.nz/
sessionInfo()
Ryan Schaefer
# Get test statistic
T = length(hs_pct[hs_pct > 82])
T
# Import dataset
setwd("~/Documents/SMU/2022Fall/STAT4385-NonparametricStats/Inclass/9_8")
data = read.table("../../Datasets/univadmissions.txt", header = TRUE)
str(data)
# Extract HS percentile
hs_pct = data$hs.pct
# Get test statistic
T = length(hs_pct[hs_pct > 82])
T
# Conduct binomial test
binom.test(T, length(T), p = 0.2, alternative = "greater")
# Conduct binomial test
binom.test(T, length(hs_pct), p = 0.2, alternative = "greater")
# Find CI with "walk-in method"
1 - (dbinom(0,15,0.5) + dbinom(15,15,0.5))
1 - (dbinom(1,15,0.5) + dbinom(14,15,0.5))
1 - sum(dbinom(0:1,15,0.5) + dbinom(14:15,15,0.5))
1 - sum(dbinom(0:2,15,0.5) + dbinom(13:15,15,0.5))
1 - sum(dbinom(0:3,15,0.5) + dbinom(12:15,15,0.5))
1 - sum(dbinom(0:4,15,0.5) + dbinom(11:15,15,0.5))
lsat = scan("../../Datasets/HarvardLsat.txt")
summary(lsat)
np = 30 * 0.5
sigma = sqrt(np*(1-0.5))
L = np - 1.645 * sigma
U = np + 1.645 * sigma
s_lsat = sort(lsat)
s_lsat[11]
s_lsat[20]
# Create C++ function with rcpp
sourceCpp("./LogLikelihood.cpp")
# Library to read C++
library(Rcpp)
# Import Jane Austen dataset
library(dplyr)
library(janeaustenr)
library(tidytext)
data = austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE)
colnames(data) = c("group", "word", "n")
data = austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE)
# Create C++ function with rcpp
sourceCpp("./LogLikelihood.cpp")
setwd("~/Documents/SMU/DigitalHistoryInternship/fall-22-democracy/LogLikelihood")
# Create C++ function with rcpp
sourceCpp("./LogLikelihood.cpp")
?log_likelihood
# Call log likelihood function
ll_scores = log_likelihood(data)
View(data)
# Call log likelihood function
ll_scores = log_likelihood(data, group = "book")
# Call log likelihood function
ll_scores = log_likelihood(data, g = "book")
ll_scores
# Call log likelihood function
ll_scores = log_likelihood(data, g = "book")
ll_scores
# Set column names to default
colnames(data) = c("group", "word", "n")
# Call log likelihood function
ll_scores = log_likelihood(data)
ll_scores
Rcpp.package.skeleton("log_likelihood", cpp_files = c("LogLikelihood.cpp"), example_code = FALSE)
Rcpp.package.skeleton("LogLikelihood", cpp_files = c("LogLikelihood.cpp"), example_code = FALSE)
?tidyverse
??tidyverse
?Rcpp
?dplyr
